import studentRegistrationForm from '../pages/form'
Cypress.on('uncaught:exception', (err, runnable) => {
  return false;
});
describe('Submit Student Registration Form', () => {
  beforeEach(() => {
    cy.visit('https://demoqa.com/automation-practice-form')
  })
  it('should fail to post the form when all fields leave empty',()=>{
    const regisForm = new studentRegistrationForm()  
    regisForm.clickSubmit()
    cy.get("#lastName").should('have.css', 'border-color', 'rgb(220, 53, 69)')
    cy.get("#firstName").should('have.css', 'border-color', 'rgb(220, 53, 69)')
    cy.get('.custom-radio > .custom-control-label').should('have.css', 'color', 'rgb(220, 53, 69)')
    cy.get('#userNumber').should('have.css', 'border-color', 'rgb(220, 53, 69)')
    cy.get('#example-modal-sizes-title-lg').should('not.exist')
  })

  it('should not be able to choose city when state is not selected',()=>{
    const regisForm = new studentRegistrationForm()  
    cy.get('#react-select-4-input').should('be.disabled')
    regisForm.typeState('Uttar Pradesh')
    cy.get('#react-select-4-input').should('not.be.disabled')
  })

  it('should be able to submit the form with valid values and no empty fields', () => {
    const regisForm = new studentRegistrationForm()
    regisForm.typefirstName('Hanh')
    regisForm.typelastName('Nguyen')
    regisForm.typeEmail('hanh@gmail.com')
    regisForm.checkGender('Female')
    regisForm.typePhoneNumber('1234567891')
    regisForm.chooseDate('18', 2, '1997')
    regisForm.typeSubject('Math')
    regisForm.uploadFile('cypress/fixtures/photo.jpg')
    regisForm.checkHobby('1')
    regisForm.typeAddress('123 Wall Street')
    regisForm.typeState('Uttar Pradesh')
    regisForm.typeCity('Agra')
    regisForm.clickSubmit()
    regisForm.checkmodelTitle()
    regisForm.checkNameValue('Hanh Nguyen')
    regisForm.checkEmailValue('hanh@gmail.com')
    regisForm.checkGenderValue('Female')
    regisForm.checkMobileValue('1234567891')
    regisForm.checkDoBValue('18 February,1997')
    regisForm.checkSubjectValue('Math')
    regisForm.checkHobbyValue('Sports')
    regisForm.checkPictureValue('photo.jpg')
    regisForm.checkAddressValue('123 Wall Street')
    regisForm.checkStateCityValue('Uttar Pradesh', 'Agra')
  })
  it('should be unable to submit the form for leave firstName field empty', () => {
    const regisForm = new studentRegistrationForm()
    regisForm.typelastName('Nguyen')
    regisForm.typeEmail('hanh@gmail.com')
    regisForm.checkGender('Female')
    regisForm.typePhoneNumber('1234567891')
    regisForm.chooseDate('18', 2, '1997')
    regisForm.typeSubject('Math')
    regisForm.uploadFile('cypress/fixtures/photo.jpg')
    regisForm.checkHobby('1')
    regisForm.typeAddress('123 Wall Street')
    regisForm.typeState('Uttar Pradesh')
    regisForm.typeCity('Agra')
    regisForm.clickSubmit()
    cy.get("#firstName").should('have.css', 'border-color', 'rgb(220, 53, 69)')

  })
  it('should be unable to submit the form for leave lastName field empty', () => {
    const regisForm = new studentRegistrationForm()
    regisForm.typefirstName('Nguyen')
    regisForm.typeEmail('hanh@gmail.com')
    regisForm.checkGender('Female')
    regisForm.typePhoneNumber('1234567891')
    regisForm.chooseDate('18', 2, '1997')
    regisForm.typeSubject('Math')
    regisForm.uploadFile('cypress/fixtures/photo.jpg')
    regisForm.checkHobby('1')
    regisForm.typeAddress('123 Wall Street')
    regisForm.typeState('Uttar Pradesh')
    regisForm.typeCity('Agra')
    regisForm.clickSubmit()
    cy.get("#lastName").should('have.css', 'border-color', 'rgb(220, 53, 69)')
  })
  it('should be unable to submit the form for leave Gender field empty', () => {
    const regisForm = new studentRegistrationForm()
    regisForm.typefirstName('Hanh')
    regisForm.typelastName('Nguyen')
    regisForm.typeEmail('hanh@gmail.com')
    regisForm.typePhoneNumber('1234567891')
    regisForm.chooseDate('18', 2, '1997')
    regisForm.typeSubject('Math')
    regisForm.uploadFile('cypress/fixtures/photo.jpg')
    regisForm.checkHobby('1')
    regisForm.typeAddress('123 Wall Street')
    regisForm.typeState('Uttar Pradesh')
    regisForm.typeCity('Agra')
    regisForm.clickSubmit()
    cy.get('.custom-radio > .custom-control-label').should('have.css', 'color', 'rgb(220, 53, 69)')
  })
  it('should be unable to submit the form for leave MobileNumber field empty', () => {
    const regisForm = new studentRegistrationForm()
    regisForm.typefirstName('Hanh')
    regisForm.typelastName('Nguyen')
    regisForm.typeEmail('hanh@gmail.com')
    regisForm.checkGender('Female')
    regisForm.chooseDate('18', 2, '1997')
    regisForm.typeSubject('Math')
    regisForm.uploadFile('cypress/fixtures/photo.jpg')
    regisForm.checkHobby('1')
    regisForm.typeAddress('123 Wall Street')
    regisForm.typeState('Uttar Pradesh')
    regisForm.typeCity('Agra')
    regisForm.clickSubmit()
    cy.get('#userNumber').should('have.css', 'border-color', 'rgb(220, 53, 69)')
  })
  it.only('should be able to submit the form when leave not required field empty', () => {
    const regisForm = new studentRegistrationForm()
    regisForm.typefirstName('Hanh')
    regisForm.typelastName('Nguyen')
    regisForm.checkGender('Female')
    regisForm.typePhoneNumber('1234567891')
    regisForm.clickSubmit()
    regisForm.checkmodelTitle()
    regisForm.checkNameValue('Hanh Nguyen')
    regisForm.checkGenderValue('Female')
    regisForm.checkMobileValue('1234567891')
    regisForm.checkEmailValue('')
    cy.get('tr:nth-child(5) > td:nth-child(2)').should('have.text','')
    regisForm.checkSubjectValue('')
    regisForm.checkHobbyValue('')
    regisForm.checkPictureValue('')
    regisForm.checkAddressValue('')
    regisForm.checkStateCityValue('', '')
  })

  const emailTestValue = ['123564897', 'hanhnguyen', 'hanhnguyen@', 'hanhnguyen@gmail', '@%!^$@%', 'hang@gmail.c', 'hanh@g.c']
  emailTestValue.forEach((val) => {
    it('should not be unable to submit the form for invalid email values', () => {
      const regisForm = new studentRegistrationForm()
      regisForm.typefirstName('Hanh')
      regisForm.typelastName('Nguyen')
      regisForm.typeEmail(val)
      regisForm.checkGender('Female')
      regisForm.typePhoneNumber('1234567891')
      regisForm.clickSubmit()
      cy.get('#userEmail').should('have.css', 'border-color', 'rgb(220, 53, 69)')
    })
  })
 
  const phoneTestValue = ['1235', 'hanhnguyen', '123hanh', '12345678910544', '@%!^$@%']
  phoneTestValue.forEach((val) => {
    it('should not be unable to submit the form for invalid phone number values', () => {
      const regisForm = new studentRegistrationForm()
      regisForm.typefirstName('Hanh')
      regisForm.typelastName('Nguyen')
      regisForm.checkGender('Female')
      regisForm.typePhoneNumber(val)
      regisForm.clickSubmit()
      cy.get('#userNumber').should('have.css', 'border-color', 'rgb(220, 53, 69)')
      cy.get('#example-modal-sizes-title-lg').should('not.exist')
      
    })
  })

  it('should be unable to submit the form for invalid date of birth', () => {
    const regisForm = new studentRegistrationForm()
    regisForm.typefirstName('Hanh')
    regisForm.typelastName('Nguyen')
    regisForm.checkGender('Female')
    regisForm.typePhoneNumber('1234567891')
    regisForm.chooseDate('18', 2, '2025')
    regisForm.clickSubmit()
    cy.get('#dateOfBirthInput').should('have.css','border-color','rgb(220, 53, 69)')
    cy.get('#example-modal-sizes-title-lg').should('not.exist').and('not.have.text', 'Thanks for submitting the form')
  })

  const fileTestValue = ['example.json', 'pdfdata.pdf', 'worddata.docx', 'zipdata.zip']
  fileTestValue.forEach((val) => {
    it('should not be unable to upload not-picture type file', () => {
      const regisForm = new studentRegistrationForm()
      regisForm.typefirstName('Hanh')
      regisForm.typelastName('Nguyen')
      regisForm.checkGender('Female')
      regisForm.typePhoneNumber('1234567891')
      regisForm.uploadFile('cypress/fixtures/' + val)
      regisForm.clickSubmit()
      cy.get('#example-modal-sizes-title-lg').should('not.exist')
      regisForm.checkPictureValue(val)
    })
  })


  it('should be unable to choose more than one gender', () => {
    const regisForm = new studentRegistrationForm()
    regisForm.checkGender('Male')
    regisForm.checkGender('Other')
    cy.get('input[value="Male"]').should('not.be.checked')
    cy.get('input[value="Other"]').should('be.checked')
  })
  it('should be able to choose multiple hobbies', () => {
    const regisForm = new studentRegistrationForm()
    regisForm.checkHobby('1')
    regisForm.checkHobby('2')
    cy.get('input[value="1"]').should('be.checked').and('have.value', '1');
    cy.get('input[value="2"]').should('be.checked').and('have.value', '2');
  })
  it('should be able to choose many subjects',()=>{
    const regisForm = new studentRegistrationForm()
    regisForm.typeSubject('Maths')
    regisForm.typeSubject('Hindi')
    cy.get('#subjectsContainer').should('contain','Maths')
    cy.get('#subjectsContainer').should('contain','Hindi')
  })
  it('should be able to remove subjects',()=>{
    const regisForm = new studentRegistrationForm()
    regisForm.typeSubject('Maths')
    cy.get('.subjects-auto-complete__multi-value__remove').click()
    cy.get('#subjectsContainer').should('not.contain','Maths')
  })
})
